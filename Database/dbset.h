//-----------------------------------------------------------------------------
// File: dbset.h
// Auth: SnipGhost
//                                                       Структура класса DBSet
//-----------------------------------------------------------------------------
#pragma once
#ifndef DBSET_H 
#define DBSET_H
//-----------------------------------------------------------------------------
#include "kernel.h"
#include "dbtable.h"
//-----------------------------------------------------------------------------
class Kernel::DBSet
{
 private:
	 string dbName;
	 Tab tables;
 public:
	 DBSet();
	 ~DBSet();
	 DBSet(string path);
	 //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 bool isTableExist(string name);    // Проверяет существует ли таблица
	 size_t getSize();                  // Получить количество таблиц
	 DBTable& operator[](string name);  // Достать таблицу по названию
	 DBTable& operator[](size_t index); // Достать таблицу по индексу
	 //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 bool readTableSet(string path);    // Прочитать файл БД из файла
	 bool createTable(string path);     // Добавить в БД новую таблицу
	 bool dropTable(string name);       // Удалить таблицу из БД
	 //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 // Получить указатель на таблицу объединения ДВУХ таблиц по 1-му критерию
	 DBTable* selectData(string line, string exp);
};
//-----------------------------------------------------------------------------
#endif /* DBSET_H */
//-----------------------------------------------------------------------------